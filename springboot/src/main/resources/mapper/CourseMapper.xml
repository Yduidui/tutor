<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.CourseMapper">

    <select id="selectAll" resultType="com.example.springboot.entity.Course">
        SELECT
        course.*,
        subject.name as subjectName,
        teacher.name as teacherName,
        GROUP_CONCAT(student.name) as studentNames
        FROM course
        LEFT JOIN subject ON course.subject_id = subject.id
        LEFT JOIN teacher ON course.teacher_id = teacher.id
        LEFT JOIN student ON FIND_IN_SET(student.id, course.student_ids)
        <where>
            <if test="title != null and title != ''">
                AND course.title LIKE CONCAT('%', #{title}, '%')
            </if>
        </where>
        GROUP BY course.id
        ORDER BY course.id DESC
    </select>


    <select id="selectById" resultType="com.example.springboot.entity.Course">
        SELECT course.*,
        subject.name AS subjectName,
        teacher.name AS teacherName,
        GROUP_CONCAT(student.name) AS studentNames
        FROM course
        LEFT JOIN subject ON course.subject_id = subject.id
        LEFT JOIN teacher ON course.teacher_id = teacher.id
        LEFT JOIN student ON FIND_IN_SET(student.id, course.student_ids)
        WHERE course.id = #{id}  <!-- 确保 id 来自 course 表 -->
        GROUP BY course.id;       <!-- 加入 GROUP BY 以便于使用聚合函数 -->
    </select>

    <select id="selectByTeacherId" resultType="com.example.springboot.entity.Course">
        SELECT * FROM course WHERE teacher_id = #{teacherId} ORDER BY id DESC
    </select>

    <select id="selectByStudentId" resultType="com.example.springboot.entity.Course">
        SELECT * FROM course WHERE student_ids = #{studentId} ORDER BY id DESC
    </select>

    <insert id="insert" parameterType="com.example.springboot.entity.Course" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO course (
            cover,title,description,subject_id,teacher_id,student_ids,start_time,end_time,
            duration,status,price,create_time,click_count
        ) VALUES (
                     #{cover},#{title},#{description},#{subjectId},#{teacherId},#{studentIds},
                     #{startTime},#{endTime},#{duration},#{status},#{price},#{createTime},#{clickCount}
                 )
    </insert>

    <update id="updateById" parameterType="com.example.springboot.entity.Course">
        UPDATE course
        SET
            cover = #{cover},
            title = #{title},
            description = #{description},
            subject_id = #{subjectId},
            teacher_id = #{teacherId},
            student_ids = #{studentIds},
            start_time = #{startTime},
            end_time = #{endTime},
            duration = #{duration},
            status = #{status},
            price = #{price},
            click_count = #{clickCount}
        WHERE id = #{id}
    </update>

    <update id="updateStudentIdByCourseId">
        UPDATE course
        SET student_ids = #{studentId}
        WHERE id = #{courseId}
    </update>

    <delete id="deleteById">
        DELETE FROM course WHERE id = #{id}
    </delete>

    <!-- 根据课程 ID 列表查询课程 -->
    <select id="selectByCourseIds" parameterType="java.util.List" resultType="com.example.springboot.entity.Course">
        SELECT course.*,
        subject.name AS subjectName,
        teacher.name AS teacherName,
        student.name AS studentNames
               FROM course
        LEFT JOIN subject ON course.subject_id = subject.id
        LEFT JOIN teacher ON course.teacher_id = teacher.id
        LEFT JOIN student ON course.student_ids = student.id
               WHERE course.id IN
        <foreach item="id" collection="courseIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY course.id
    </select>

    <select id="countByTeacherId" resultType="int">
        SELECT COUNT(*) FROM course WHERE teacher_id = #{teacherId}
    </select>

    <select id="getAllCourseCount" resultType="int">
        SELECT COUNT(*) FROM course
    </select>

    <select id="selectTopCourses" resultType="com.example.springboot.entity.Course">
        SELECT *
        FROM course
        WHERE click_count IS NOT NULL
        ORDER BY click_count DESC
            LIMIT 4
    </select>
</mapper>
